{"version":3,"sources":["components/Register.jsx","components/Login.jsx","views/LoginReg.jsx","components/NavBar.jsx","components/ChecklistLink.jsx","views/LoadingUpdates.jsx","components/NoLists.jsx","views/Dashboard.jsx","components/SearchForm.jsx","components/SearchBird.jsx","views/BirdBinoculars.jsx","components/DisplayResults.jsx","views/Main.jsx","views/Logout.jsx","components/ChecklistBird.jsx","views/SingleChecklist.jsx","App.js","serviceWorker.js","index.js"],"names":["useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","className","onSubmit","event","preventDefault","newUser","axios","post","withCredentials","then","res","navigate","catch","err","response","data","onChange","e","target","value","type","placeholder","properties","message","errorMessage","setErrorMessage","msg","console","log","Register","Login","props","userName","to","onClick","checklist","formatted_date","updatedAt","slice","href","_id","title","style","fontSize","location","src","frameBorder","allowFullScreen","height","_","require","isLoaded","setIsLoaded","loggedInUser","setLoggedInUser","useEffect","get","user","checklists","setChecklists","lists","orderBy","NavBar","LoadingUpdates","length","NoLists","map","idx","ChecklistLink","key","deleteId","delete","filteredLists","filter","list","searchLocation","setSearchLocation","searchState","setSearchState","searchCounty","setSearchCounty","searchMunicipality","setSearchMunicipality","searchSeason","setSearchSeason","searchRadius","setSearchRadius","season","currMonth","Date","getMonth","encodeURIComponent","locale","name","id","htmlFor","bird","width","photoUrl","alt","commonName","wikipediaUrl","latinName","iNatOccUrl","observedOn","locality","decodeURIComponent","localeString","replace","birdList","setBirdList","geocodeError","setGeocodeError","birdListError","setBirdListError","setTitle","setLocation","notes","params","address","process","currDate","per_page","iconic_taxa","order","order_by","quality_grade","geoprivacy","month","d1","getFullYear","getDate","d2","lat","results","geometry","lng","r","birds","fullList","filteredList","uniqueBirds","forEach","b","includes","taxon","preferred_common_name","push","default_photo","square_url","wikipedia_url","uri","observed_on","hasBeenSeen","shouldSave","filterBirds","BirdBinoculars","birdsToSave","newChecklist","creator","listId","newList","editedUser","concat","put","json","newListId","checked","keepBirdHandler","SearchBird","SearchForm","DisplayResults","path","checklistId","lastUpdated","setLastUpdated","setNotes","setBirds","editedChecklist","rows","formattedDate","hasBeenSeenHandler","ChecklistBird","App","LoginReg","Dashboard","Main","SingleChecklist","Logout","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"yQAIe,aAAO,IAAD,sBACeA,mBAAS,IADxB,mBACZC,EADY,KACDC,EADC,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGOJ,mBAAS,IAHhB,mBAGZK,EAHY,KAGLC,EAHK,OAIaN,mBAAS,IAJtB,mBAIZO,EAJY,KAIFC,EAJE,OAK2BR,mBAAS,IALpC,mBAKZS,EALY,KAKKC,EALL,OAMSV,mBAAS,MANlB,mBAMZW,EANY,KAMJC,EANI,KAyBjB,OACI,oCAEI,0BAAMC,UAAU,mBAAmBC,SApB5B,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAU,CAAEhB,YAAWE,WAAUE,QAAOE,WAAUE,mBACxDS,IAAMC,KAAK,qCAAsCF,EAAS,CAACG,iBAAiB,IACvEC,MAAK,SAACC,GACHpB,EAAa,IACbE,EAAY,IACZE,EAAS,IACTE,EAAY,IACZE,EAAmB,IAEnBa,YAAS,YAEZC,OAAM,SAACC,GAASb,EAAUa,EAAIC,SAASC,KAAKhB,aAQrC,yBAAKE,UAAU,mCACX,8BAAUA,UAAU,2BACpB,4BAAQA,UAAU,oBAAlB,YACI,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,YACX,2BACIe,SAAU,SAACC,GAAD,OAAO3B,EAAa2B,EAAEC,OAAOC,QACvCA,MAAO9B,EACP+B,KAAK,OACLnB,UAAU,eACVoB,YAAY,gBAET,OAANtB,QAAM,IAANA,OAAA,EAAAA,EAAQV,YACL,0BAAMY,UAAU,iBAAhB,UAAiCF,EAAOV,iBAAxC,iBAAiC,EAAkBiC,kBAAnD,aAAiC,EAA8BC,UAGvE,yBAAKtB,UAAU,YACX,2BACIe,SAAU,SAACC,GAAD,OAAOzB,EAAYyB,EAAEC,OAAOC,QACtCA,MAAO5B,EACP6B,KAAK,OACLnB,UAAU,eACVoB,YAAY,eAET,OAANtB,QAAM,IAANA,OAAA,EAAAA,EAAQR,WACL,0BAAMU,UAAU,iBAAhB,UAAiCF,EAAOR,gBAAxC,iBAAiC,EAAiB+B,kBAAlD,aAAiC,EAA6BC,WAI1E,yBAAKtB,UAAU,oBACX,2BACIe,SAAU,SAACC,GAAD,OAAOvB,EAASuB,EAAEC,OAAOC,QACnCA,MAAO1B,EACP2B,KAAK,OACLnB,UAAU,eACVoB,YAAY,WAET,OAANtB,QAAM,IAANA,OAAA,EAAAA,EAAQN,QACL,0BAAMQ,UAAU,iBAAhB,UAAiCF,EAAON,aAAxC,iBAAiC,EAAc6B,kBAA/C,aAAiC,EAA0BC,UAGnE,yBAAKtB,UAAU,gBACX,yBAAKA,UAAU,YACX,2BACIe,SAAU,SAACC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOC,QACtCA,MAAOxB,EACPyB,KAAK,OACLnB,UAAU,eACVoB,YAAY,cAET,OAANtB,QAAM,IAANA,OAAA,EAAAA,EAAQJ,WACL,0BAAMM,UAAU,iBAAhB,UAAiCF,EAAOJ,gBAAxC,iBAAiC,EAAiB2B,kBAAlD,aAAiC,EAA6BC,UAGtE,yBAAKtB,UAAU,YACX,2BACIe,SAAU,SAACC,GAAD,OAAOnB,EAAmBmB,EAAEC,OAAOC,QAC7CA,MAAOtB,EACPuB,KAAK,OACLnB,UAAU,eACVoB,YAAY,sBAET,OAANtB,QAAM,IAANA,OAAA,EAAAA,EAAQF,kBACL,0BAAMI,UAAU,iBAAhB,UAAiCF,EAAOF,uBAAxC,iBAAiC,EAAwByB,kBAAzD,aAAiC,EAAoCC,WAIjF,yBAAKtB,UAAU,8BACX,4BAAQA,UAAU,uEAAlB,kBCjGb,aAAO,IAAD,EACOb,mBAAS,IADhB,mBACZK,EADY,KACLC,EADK,OAEaN,mBAAS,IAFtB,mBAEZO,EAFY,KAEFC,EAFE,OAGqBR,mBAAS,MAH9B,mBAGZoC,EAHY,KAGEC,EAHF,KAajB,OACI,oCAEI,0BAAMxB,UAAU,mBAAmBC,SAX/B,SAACe,GACbA,EAAEb,iBACFE,IAAMC,KAAK,kCAAkC,CAAEd,QAAOE,YAAW,CAACa,iBAAiB,IAChFC,MAAK,SAACC,GAASC,YAAS,YACxBC,OAAM,SAACC,GAASY,EAAgBZ,EAAIC,SAASC,KAAKW,UAQzC,yBAAKzB,UAAU,mCACX,8BAAUA,UAAU,2BACpB,4BAAQA,UAAU,oBAAlB,SACI,yBAAKA,UAAU,oBACX,2BACIe,SAAU,SAACC,GAAD,OAAOvB,EAASuB,EAAEC,OAAOC,QACnCA,MAAO1B,EACP2B,KAAK,OACLnB,UAAU,eACVoB,YAAY,WAGpB,yBAAKpB,UAAU,oBACX,2BACIe,SAAU,SAACC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOC,QACtCA,MAAOxB,EACPyB,KAAK,OACLnB,UAAU,eACVoB,YAAY,cAGpB,uBAAGpB,UAAU,iBAAiBuB,GAA8B,IAC5D,yBAAKvB,UAAU,8BACX,4BAAQA,UAAU,uEAAlB,eCrCb,aAcX,OACI,oCACA,wBAAIA,UAAU,QAAd,yBACA,2DACA,0BAAMC,SAhBS,SAACe,GAChBA,EAAEb,iBACFE,IACGC,KAAK,kCAAkC,CAAEd,MAAO,mBAAoBE,SAAU,YAAa,CAACa,iBAAiB,IAC7GC,MAAK,SAACC,GACLC,YAAS,YAEVC,OAAM,SAACC,GACNc,QAAQC,IAAIf,QASZ,4BAAQZ,UAAU,uCAAlB,wBAGJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,kBAAC4B,EAAD,MACA,kBAACC,EAAD,UC5BD,WAACC,GACZ,IAAMC,EAAWD,EAAMC,SASvB,OACI,yBAAK/B,UAAU,iCACX,kBAAC,IAAD,CAAMgC,GAAG,QAAQhC,UAAU,4CAA3B,QACA,wBAAIA,UAAU,0BAAd,SAA8C+B,EAA9C,MACA,kBAAC,IAAD,CAAMC,GAAG,QAAQhC,UAAU,sCAA3B,YACA,4BAAQiC,QAZD,SAACjB,GACZA,EAAEb,iBACFE,IAAMC,KAAK,mCAAoC,GAAI,CAACC,iBAAgB,IAC/DC,MAAK,SAAAC,GAAQC,YAAS,QACtBC,OAAM,SAAAC,GAAG,OAAIc,QAAQC,IAAIf,OAQDZ,UAAU,qCAAnC,YCjBG,cAAkB,IAAhBkC,EAAe,EAAfA,UACPC,EAAiBD,EAAUE,UAAUC,MAAM,EAAE,IAEnD,OACI,yBAAKrC,UAAU,mDACX,yBAAKA,UAAU,4CACX,uBACIsC,KAAI,sBAAiBJ,EAAUK,KAC/BvC,UAAU,8CACZkC,EAAUM,OAEZ,yBAAKxC,UAAU,SACX,uBACIA,UAAU,4CACVyC,MAAO,CAACC,SAAU,SAFtB,cAGaR,EAAUS,UAEvB,uBACI3C,UAAU,oDACVyC,MAAO,CAACC,SAAU,SAFtB,iBAGgBP,OCpBrB,aAEX,OACI,oCACQ,8DACJ,yBAAKnC,UAAU,aACX,4BACI4C,IAAI,uCACJC,YAAY,IACZ7C,UAAU,GACV8C,iBAAe,EACfL,MAAO,CAACM,OAAO,QAIvB,2BAAG,uBAAGT,KAAK,+DAAR,gBCfA,aACX,OACI,oCACI,wBAAItC,UAAU,oBAAd,2CAAyE,6BAAzE,gDACA,yBAAKA,UAAU,aACX,4BACI4C,IAAI,6CACJC,YAAY,IACZ7C,UAAU,GACV8C,iBAAe,EACfL,MAAO,CAACM,OAAO,QAIvB,2BAAG,uBAAGT,KAAK,4EAAR,gBCRA,aACX,IAAIU,EAAIC,EAAQ,GADC,EAEe9D,oBAAS,GAFxB,mBAEV+D,EAFU,KAEAC,EAFA,OAIuBhE,mBAAS,IAJhC,mBAIViE,EAJU,KAIIC,EAJJ,KAKjBC,qBAAU,WACNjD,IAAMkD,IAAI,2CAA4C,CAAChD,iBAAiB,IACnEC,MAAK,SAAAgD,GACF9B,QAAQC,IAAR,0BAA+B6B,EAAK1C,KAAKtB,QACzC6D,EAAgBG,EAAK1C,SAExBH,OAAM,SAAAC,GAAQc,QAAQC,IAAIf,QAChC,IAZc,MAemBzB,mBAAS,IAf5B,mBAeVsE,EAfU,KAeEC,EAfF,KAgBjBJ,qBAAU,WACNjD,IAAMkD,IAAI,6CAA8C,CAAChD,iBAAiB,IACrEC,MAAK,SAAAC,GACF,IAAIkD,EAAQlD,EAAIK,KAAK2C,WACrBE,EAAQX,EAAEY,QAAQD,EAAO,cACzBD,EAAcC,GACdR,GAAY,MAEfxC,OAAM,SAAAC,GAAQc,QAAQC,IAAIf,QAChC,IAcH,OACI,yBAAKZ,UAAU,aACX,kBAAC6D,EAAD,CAAQ9B,SAAUqB,EAAahE,aAE7B8D,GAAY,kBAACY,EAAD,MACZZ,GAAYO,EAAWM,OAAS,EAClC,6BACI,wBAAI/D,UAAU,uBAAd,qCACA,wBAAIA,UAAU,mCAAd,uCACK,KACPkD,GAAkC,IAAtBO,EAAWM,OAAgB,kBAACC,EAAD,MAAa,KACpDd,GAAYO,EAAWM,OAAS,EAClCN,EAAWQ,KAAI,SAAC/B,EAAWgC,GACnB,OACI,yBAAKlE,UAAU,WACX,kBAACmE,EAAD,CAAejC,UAAWA,EAAWkC,IAAKF,IACtC,4BACIjC,QAAS,SAAAjB,GAAC,OA7BpBqD,EA6BqCnC,EAAUK,IA5BjEY,GAAY,QACZ9C,IAAMiE,OAAN,+CAAqDD,GAAY,CAAC9D,iBAAiB,IAC9EC,MAAK,SAAAC,GACFiB,QAAQC,IAAR,8BAAmC0C,IACnC,IAAME,EAAgBd,EAAWe,QAAO,SAAAC,GAAS,OAAOA,EAAKlC,KAAO8B,KACpEX,EAAca,GACdpB,GAAY,MAEfxC,OAAM,SAAAC,GAAG,OAAIc,QAAQC,IAAIf,MATb,IAACyD,GA8BUrE,UAAU,8DAFd,cAQZ,OCnEL,aAAM,MAEyBb,mBAAS,IAFlC,mBAEZuF,EAFY,KAEIC,EAFJ,OAGmBxF,mBAAS,IAH5B,mBAGZyF,EAHY,KAGCC,EAHD,OAIqB1F,mBAAS,IAJ9B,mBAIZ2F,EAJY,KAIEC,EAJF,OAKiC5F,mBAAS,IAL1C,mBAKZ6F,EALY,KAKQC,EALR,OAMqB9F,mBAAS,IAN9B,mBAMZ+F,EANY,KAMEC,EANF,OAOqBhG,mBAAS,IAP9B,mBAOZiG,EAPY,KAOEC,EAPF,KAiCnB,OACE,oCAEA,0BAAMrF,UAAU,sBAAsBC,SA3BnB,SAACe,GACpBA,EAAEb,iBAEF,IAAImF,EAAQ,GACRC,GAAY,IAAIC,MAAOC,WACP,eAAjBP,IAA+BI,EAAO,CAACC,EAAU,EAAGA,EAAWA,EAAU,IACxD,iBAAjBL,IAAiCI,EAAO,CAAC,EAAE,EAAE,IAC5B,iBAAjBJ,IAAiCI,EAAO,CAAC,EAAE,EAAE,IAC5B,eAAjBJ,IAA+BI,EAAO,CAAC,EAAE,EAAE,KAC1B,iBAAjBJ,IAAiCI,EAAO,CAAC,GAAG,EAAE,IACjDA,EAASI,mBAAmBJ,GAG5B,IAAIK,EAAM,GACNjB,EAAeX,OAAO,IAAG4B,GAAM,UAAOjB,EAAP,MAC/BM,EAAmBjB,OAAO,IAAG4B,GAAM,UAAOX,EAAP,MACnCF,EAAaf,OAAO,IAAG4B,GAAM,UAAOb,EAAP,aAC7BF,EAAYb,OAAO,IAAG4B,GAAM,UAAOf,IACvCe,EAASD,mBAAmBC,GAG5BjF,YAAS,iBAAD,OAAkBiF,EAAlB,YAA4BL,MAQhC,yBAAKtF,UAAU,mCAEX,8BAAUA,UAAU,oCACpB,4BAAQA,UAAU,oBAAlB,YAEI,yBAAKA,UAAU,oBACX,2BACIe,SAAU,SAACC,GAAD,OAAO2D,EAAkB3D,EAAEC,OAAOC,QAC5CA,MAAOwD,EACPvD,KAAK,OACLnB,UAAU,eACVoB,YAAY,iDAIpB,yBAAKpB,UAAU,gBACX,2BACIe,SAAU,SAACC,GAAD,OAAOiE,EAAsBjE,EAAEC,OAAOC,QAChDA,MAAO8D,EACP7D,KAAK,OACLnB,UAAU,eACVoB,YAAY,kBAIpB,yBAAKpB,UAAU,gBACX,yBAAKA,UAAU,YACX,2BACIe,SAAU,SAACC,GAAD,OAAO+D,EAAgB/D,EAAEC,OAAOC,QAC1CA,MAAO4D,EACP3D,KAAK,OACLnB,UAAU,eACVoB,YAAY,YAGpB,yBAAKpB,UAAU,YACX,2BACIe,SAAU,SAACC,GAAD,OAAO6D,EAAe7D,EAAEC,OAAOC,QACzCA,MAAO0D,EACPzD,KAAK,OACLnB,UAAU,eACVoB,YAAY,YAKxB,yBAAKpB,UAAU,gBACX,2BACIe,SAAU,SAACC,GAAD,OAAOqE,EAAgBrE,EAAEC,OAAOC,QAC1CA,MAAOkE,EACPjE,KAAK,OACLnB,UAAU,eACVoB,YAAY,yBApD5B,IAyDI,8BAAUpB,UAAU,oCACpB,4BAAQA,UAAU,oBAAlB,UAEI,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,0BACX,2BACAe,SAAU,SAACC,GAAD,OAAOmE,EAAgBnE,EAAEC,OAAOC,QAC1ClB,UAAU,mBACVmB,KAAK,QACLyE,KAAK,eACLC,GAAG,aACH3E,MAAM,eAEN,2BAAOlB,UAAU,mBAAmB8F,QAAQ,cAA5C,4CAOZ,yBAAK9F,UAAU,mCACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,0BACX,2BACAe,SAAU,SAACC,GAAD,OAAOmE,EAAgBnE,EAAEC,OAAOC,QAC1ClB,UAAU,wBACVmB,KAAK,QACLyE,KAAK,eACLC,GAAG,eACH3E,MAAM,iBAEN,2BAAOlB,UAAU,mBAAmB8F,QAAQ,gBAA5C,SACU,6BADV,mBAKR,yBAAK9F,UAAU,gCACX,yBAAKA,UAAU,0BACX,2BACAe,SAAU,SAACC,GAAD,OAAOmE,EAAgBnE,EAAEC,OAAOC,QAC1ClB,UAAU,wBACVmB,KAAK,QACLyE,KAAK,eACLC,GAAG,eACH3E,MAAM,iBAEN,2BAAOlB,UAAU,mBAAmB8F,QAAQ,gBAA5C,SACU,6BADV,mBAOZ,yBAAK9F,UAAU,mCACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,0BACX,2BACAe,SAAU,SAACC,GAAD,OAAOmE,EAAgBnE,EAAEC,OAAOC,QAC1ClB,UAAU,wBACVmB,KAAK,QACLyE,KAAK,eACLC,GAAG,aACH3E,MAAM,eAEN,2BAAOlB,UAAU,wBAAwB8F,QAAQ,cAAjD,OACQ,6BADR,kBAKR,yBAAK9F,UAAU,gCACX,yBAAKA,UAAU,0BACX,2BACAe,SAAU,SAACC,GAAD,OAAOmE,EAAgBnE,EAAEC,OAAOC,QAC1ClB,UAAU,wBACVmB,KAAK,QACLyE,KAAK,eACLC,GAAG,eACH3E,MAAM,iBAEN,2BAAOlB,UAAU,wBAAwB8F,QAAQ,gBAAjD,SACU,6BADV,oBASpB,yBAAK9F,UAAU,8BAEX,4BAAQA,UAAU,wCAAlB,yB,OC5LG,cAAa,IAAX+F,EAAU,EAAVA,KACb,OACI,oCACA,yBAAK/F,UAAU,8BAA8ByC,MAAO,CAACuD,MAAO,SACxD,yBACIpD,IAAKmD,EAAKE,SACVC,IAAG,UAAKH,EAAKI,YACbnG,UAAU,sDACVyC,MAAO,CAACuD,MAAO,UAGnB,yBAAKhG,UAAU,yBACX,uBACIsC,KAAI,UAAKyD,EAAKK,cACdnF,OAAO,SACPjB,UAAU,WACZ+F,EAAKI,YAEP,uBAAGnG,UAAU,eAAe+F,EAAKM,WACjC,uBAAG/D,KAAI,UAAKyD,EAAKO,YAAcrF,OAAO,UAAS,0BAAMjB,UAAU,eAAeyC,MAAO,CAACC,SAAU,SAAjD,uBAAwFqD,EAAKQ,gBCnB7I,aAEX,OACI,oCACQ,yDACJ,yBAAKvG,UAAU,aACX,4BACI4C,IAAI,wCACJC,YAAY,IACZ7C,UAAU,GACV8C,iBAAe,EACfL,MAAO,CAACM,OAAO,QAIvB,2BAAG,uBAAGT,KAAK,uEAAR,gBCVA,WAACR,GAAW,IAAD,EACU3C,oBAAS,GADnB,mBACf+D,EADe,KACLC,EADK,KAGlBH,EAAIC,EAAQ,GAHM,EAKkB9D,mBAAS,IAL3B,mBAKfiE,EALe,KAKDC,EALC,KAOtBC,qBAAU,WACNjD,IAAMkD,IAAI,2CAA4C,CAAChD,iBAAiB,IACnEC,MAAK,SAAAgD,GACF9B,QAAQC,IAAR,0BAA+B6B,EAAK1C,KAAKtB,QACzC6D,EAAgBG,EAAK1C,SAExBH,OAAM,SAAAC,GAAQc,QAAQC,IAAIf,QAChC,IAGH,IAAM4F,EAAW1E,EAAM6D,OACjBL,EAASmB,mBAAmB3E,EAAMwD,QACpCoB,EAAeD,mBAAmBD,GAAUG,QAAQ,IAAK,MAnBvC,EAsBUxH,mBAAS,IAtBnB,mBAsBfyH,EAtBe,KAsBLC,EAtBK,OAuBkB1H,mBAAS,IAvB3B,mBAuBf2H,EAvBe,KAuBDC,EAvBC,OAwBoB5H,mBAAS,IAxB7B,mBAwBf6H,EAxBe,KAwBAC,EAxBA,OA0BI9H,mBAAS,IA1Bb,mBA0BfqD,EA1Be,KA0BR0E,EA1BQ,OA2BU/H,mBAASuH,GA3BnB,mBA2Bf/D,EA3Be,KA2BLwE,EA3BK,OA4BIhI,mBAAS,IA5Bb,mBA4BfiI,EA5Be,UAyDtB9D,qBAAU,WACNjD,IAAMkD,IAAN,oDAA+D,CAC3D8D,OAAQ,CACJC,QAASd,EACTpC,IAAKmD,6CAGR/G,MAAK,SAAAC,GAEF,IAAI+G,EAAW,IAAIhC,KACnBnF,IAAMkD,IAAN,8CAAyD,CACrD8D,OAAQ,CACJI,SAAU,IACVC,YAAY,OACZC,MAAM,OACNC,SAAS,cACTC,cAAc,WACdC,WAAW,OACXC,MAAM,GAAD,OAAKzC,GAEV0C,GAAG,GAAD,OAAKR,EAASS,cAAc,GAA5B,YAAkCT,EAAS/B,WAAW,EAAtD,YAA2D+B,EAASU,WAEtEC,GAAG,GAAD,OAAKX,EAASS,cAAd,YAA+BT,EAAS/B,WAAW,EAAnD,YAAwD+B,EAASU,WAEnEE,IAAI,GAAD,OAAK3H,EAAIK,KAAKuH,QAAQ,GAAGC,SAAS3F,SAASyF,KAC9CG,IAAI,GAAD,OAAK9H,EAAIK,KAAKuH,QAAQ,GAAGC,SAAS3F,SAAS4F,QAGjD/H,MAAK,SAAAgI,GACF,IAAIC,EAvDJ,SAACA,GACjB/G,QAAQC,IAAR,yBACA,IAAI+G,EAAQ,YAAOD,GACfE,EAAe,GACfC,EAAc,GAkBlB,OAjBAF,EAASG,SAAQ,SAAAC,GACRF,EAAYG,SAASD,EAAEE,MAAMC,yBAC9BN,EAAaO,KAAK,CACdjD,SAAU6C,EAAEE,MAAMG,cAAcC,WAChCjD,WAAY2C,EAAEE,MAAMC,sBACpB5C,UAAWyC,EAAEE,MAAMpD,KACnBQ,aAAc0C,EAAEE,MAAMK,cACtB/C,WAAYwC,EAAEQ,IACd/C,WAAYuC,EAAES,YACdC,aAAa,EACbpC,MAAO,GACPqC,YAAY,IAEhBb,EAAYM,KAAKJ,EAAEE,MAAMC,2BAGfjG,EAAEY,QAAQ+E,EAAc,cAkCde,CAAYlB,EAAE1H,KAAKuH,SAC/BxB,EAAY4B,GACZtF,GAAY,MAEfxC,OAAM,SAAAC,GAAG,OAAIqG,EAAiB,mFAEtCtG,OAAM,SAAAC,GAAG,OAAEmG,EAAgB,sFAClC,IAqDF,OACI,6BACKD,EAAa/C,OAAO,GAAK,uBAAG/D,UAAU,iBAAiB8G,GACvDE,EAAcjD,OAAO,GAAK,uBAAG/D,UAAU,iBAAiBgH,IACvD9D,GAAY,kBAACyG,EAAD,MACd,wBAAI3J,UAAU,iBACbkD,GACD,0BAAMjD,SAnDe,SAACe,GAC1BA,EAAEb,iBAEF,IAAIyJ,EAAW,YAAOhD,GAiBlBiD,EAAe,CACfpB,MAhBJmB,GADAA,EAAcA,EAAYpF,QAAO,SAAAsE,GAAC,OAAoB,IAAhBA,EAAEW,eACdxF,KAAK,SAAA6E,GAW3B,MAVW,CACP3C,WAAY2C,EAAE3C,WACdqD,YAAaV,EAAEU,YACflD,WAAYwC,EAAExC,WACdD,UAAWyC,EAAEzC,UACbe,MAAO0B,EAAE1B,MACTb,WAAY,GACZN,SAAU6C,EAAE7C,SACZG,aAAc0C,EAAE1C,iBAQpB0D,QAAS1G,EAAab,IACtBI,SAAUA,EACVyE,MAAOA,EACP5E,MAAOA,EAAMuB,OAAS,EAAIvB,EAAQ,cACtCnC,IAAMC,KAAK,2CAA4CuJ,EAAc,CAACtJ,iBAAiB,IAClFC,MAAM,SAAAC,GACH,IAAMsJ,EAAStJ,EAAIK,KAAKkJ,QAAQzH,IAC1B0H,EAAa,CAACxG,WAAYL,EAAaK,WAAWyG,OAAOH,IAO/D,OALA1J,IAAM8J,IAAI,uCAAwCF,EAAY,CAAC1J,iBAAiB,IAC3EC,MAAK,SAAAC,GACFA,EAAI2J,KAAK,CAAC3I,IAAI,wDAEjBd,OAAM,SAAAC,GAAG,OAAIc,QAAQC,IAAR,iDAAsDf,OACjEmJ,KAEVvJ,MAAK,SAAA6J,GACF3J,YAAS,eAAD,OAAgB2J,OAC3B1J,OAAM,SAAAC,GAAG,OAAIc,QAAQC,IAAR,2CAAgDf,SAY1D,yBAAKZ,UAAU,kCACX,wBAAIA,UAAU,kBAAd,yBACA,4BAAQA,UAAU,+BAAlB,mBAEJ,wBAAIA,UAAU,mCAAd,8HACA,6BACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,aAAjB,UACA,2BACI4F,KAAK,QACL7E,SAAU,SAACC,GAAD,OAAOkG,EAASlG,EAAEC,OAAOC,QACnCA,MAAOsB,EACPrB,KAAK,OACLnB,UAAU,eACVoB,YAAY,oCAGpB,yBAAKpB,UAAU,uBACX,4CACA,2BACI4F,KAAK,WACL7E,SAAU,SAACC,GAAD,OAAOmG,EAAYnG,EAAEC,OAAOC,QACtCA,MAAOyB,EACPxB,KAAK,OACLnB,UAAU,eACVoB,YAAY,yCAItBwF,EAAS3C,KAAI,SAAC8B,EAAM7B,GAClB,OAEI,+BACI,2BACI/C,KAAK,WACLD,MAAO6E,EACP3B,IAAKF,EACLoG,QAASvE,EAAK0D,WACd1I,SAAU,kBAjGd,SAACmD,GACrB0C,EAAS1C,GAAKuF,YAAc7C,EAAS1C,GAAKuF,WAC1C5C,EAAY,YAAID,IA+FwB2D,CAAgBrG,MAEpC,kBAACsG,EAAD,CAAYzE,KAAMA,QAK9B,yBAAK/F,UAAU,sCACX,4BAAQA,UAAU,+BAAlB,sBCxML,aAAM,MAEuBb,mBAAS,IAFhC,mBAEViE,EAFU,KAEIC,EAFJ,KAYjB,OATAC,qBAAU,WACNjD,IAAMkD,IAAI,2CAA4C,CAAChD,iBAAiB,IACnEC,MAAK,SAAAgD,GACF9B,QAAQC,IAAR,0BAA+B6B,EAAK1C,KAAKtB,QACzC6D,EAAgBG,EAAK1C,SAExBH,OAAM,SAAAC,GAAQc,QAAQC,IAAIf,QAChC,IAGC,yBAAKZ,UAAU,aACX,kBAAC6D,EAAD,CAAQ9B,SAAUqB,EAAahE,YAC/B,wBAAIY,UAAU,mCAAd,sEACA,kBAACyK,EAAD,MAEA,kBAAC,IAAD,KACI,kBAACC,EAAD,CAAgBC,KAAK,+BCxBtB,aAEX,OACI,yBAAK3K,UAAU,kBACX,wBAAIA,UAAU,QAAd,qCACA,kBAAC,IAAD,CAAMgC,GAAG,IAAIhC,UAAU,uCAAvB,sBCNG,cAAa,IAAX+F,EAAU,EAAVA,KACb,OACI,oCACA,yBAAK/F,UAAU,8BAA8ByC,MAAO,CAACuD,MAAO,SACxD,yBACIpD,IAAKmD,EAAKE,SACVC,IAAG,UAAKH,EAAKI,YACbnG,UAAU,sDACVyC,MAAO,CAACuD,MAAO,UAGnB,yBAAKhG,UAAU,yBACX,uBACIsC,KAAI,UAAKyD,EAAKK,cACdnF,OAAO,SACPjB,UAAU,WACZ+F,EAAKI,YAEP,uBAAGnG,UAAU,eAAe+F,EAAKM,WACjC,uBAAGrG,UAAU,eAAeyC,MAAO,CAACC,SAAU,SAA9C,eAAuEqD,EAAKQ,gBCZ7E,cAAoB,IAAlBqE,EAAiB,EAAjBA,YACT5H,EAAIC,EAAQ,GADc,EAEE9D,oBAAS,GAFX,mBAEvB+D,EAFuB,KAEbC,EAFa,OAIUhE,mBAAS,IAJnB,mBAIvBiE,EAJuB,KAITC,EAJS,KAK9BC,qBAAU,WACNjD,IAAMkD,IAAI,2CAA4C,CAAChD,iBAAiB,IACnEC,MAAK,SAAAgD,GACF9B,QAAQC,IAAR,0BAA+B6B,EAAK1C,KAAKtB,QACzC6D,EAAgBG,EAAK1C,SAExBH,OAAM,SAAAC,GAAQc,QAAQC,IAAIf,QAChC,IAZ2B,MAcQzB,qBAdR,mBAcvB0L,EAduB,KAcVC,EAdU,OAeJ3L,mBAAS,IAfL,mBAevBqD,EAfuB,KAehB0E,EAfgB,OAgBE/H,mBAAS,IAhBX,mBAgBvBwD,EAhBuB,KAgBbwE,EAhBa,OAiBJhI,mBAAS,IAjBL,mBAiBvBiI,EAjBuB,KAiBhB2D,EAjBgB,OAkBJ5L,mBAAS,IAlBL,mBAkBvBsJ,EAlBuB,KAkBhBuC,EAlBgB,KAoB9B1H,qBAAU,WACNjD,IAAMkD,IAAN,+CAAkDqH,GAAe,CAACrK,iBAAiB,IAC9EC,MAAK,SAAAC,GACFqK,EAAerK,EAAIK,KAAKsB,UAAUC,MAAM,EAAE,KAC1C6E,EAASzG,EAAIK,KAAK0B,OAClB2E,EAAY1G,EAAIK,KAAK6B,UACrBoI,EAAStK,EAAIK,KAAKsG,OAClB4D,EAAShI,EAAEY,QAAQnD,EAAIK,KAAK2H,MAAO,CAAC,cAAe,gBACnDtF,GAAY,MAEfxC,OAAM,SAAAC,GAAG,OAAIc,QAAQC,IAAIf,QAChC,IAyBF,OACI,yBAAKZ,UAAU,aACX,kBAAC6D,EAAD,CAAQ9B,SAAUqB,EAAahE,aAC7B8D,GAAY,kBAACyG,EAAD,MACd,6BACKzG,GACD,oCACA,wBAAIlD,UAAU,uBAAuBwC,GACrC,wBAAIxC,UAAU,uBAAd,iBAAkD,0BAAMA,UAAU,gBAAgB6K,IAClF,wBAAI7K,UAAU,8BAAd,6GACA,0BAAMC,SAjCO,SAACe,GACtBA,EAAEb,iBACF,IAAM8K,EAAkB,CAACzI,QAAOG,WAAUyE,QAAOqB,SACjDpI,IAAM8J,IAAN,+CAAkDS,GAAeK,EAAiB,CAAC1K,iBAAiB,IAC9FC,MAAK,SAAAC,GAAG,OAAIA,EAAI2J,KAAK,CAAC3I,IAAI,uCAC1Bd,OAAM,SAAAC,GAAG,OAAIc,QAAQC,IAAIf,MAC/BF,YAAS,WA4BG,6BACA,yBAAKV,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,gBAAjB,UACA,2BACI4F,KAAK,QACL7E,SAAU,SAACC,GAAD,OAAOkG,EAASlG,EAAEC,OAAOC,QACnCA,MAAOsB,EACPrB,KAAK,OACLnB,UAAU,eACVoB,YAAaoB,KAGrB,yBAAKxC,UAAU,uBACX,2BAAOA,UAAU,gBAAjB,aACA,2BACI4F,KAAK,WACL7E,SAAU,SAACC,GAAD,OAAOmG,EAAYnG,EAAEC,OAAOC,QACtCA,MAAOyB,EACPxB,KAAK,OACLnB,UAAU,eACVoB,YAAauB,MAIzB,yBAAK3C,UAAU,gBACX,2BAAOA,UAAU,gBAAjB,UACA,8BACI4F,KAAK,QACL7E,SAAU,SAACC,GAAD,OAAO+J,EAAS/J,EAAEC,OAAOC,QACnCA,MAAOkG,EACPjG,KAAK,YACLnB,UAAU,eACVoB,YAAagG,EACb8D,KAAM,KAGd,yBAAKlL,UAAU,8BACX,4BAAQA,UAAU,oCAAlB,iBAEHyI,EAAMxE,KAAI,SAAC8B,EAAM7B,GACd,OAEI,+BACI,2BACI/C,KAAK,WACLD,MAAO6E,EACP3B,IAAKF,EACLoG,QAASvE,EAAKyD,YACdzI,SAAU,kBA3Ef,SAACmD,GACxBxC,QAAQC,IAAR,mCACA,IAAIiF,EAAQ,YAAO6B,GAEnB,GADA7B,EAAS1C,GAAKsF,aAAe5C,EAAS1C,GAAKsF,YACvC5C,EAAS1C,GAAKsF,YAAa,CAC3B,IAAIhC,EAAW,IAAIhC,KACf2F,EAAa,UAAM3D,EAASS,cAAf,YAAgCT,EAAS/B,WAAW,EAApD,YAAyD+B,EAASU,WACnFtB,EAAS1C,GAAKqC,WAAa4E,OAEzBvE,EAAS1C,GAAKqC,WAAa,GACjCK,EAAW5D,EAAEY,QAAQgD,EAAU,CAAC,cAAe,eAC/CoE,EAASpE,GAgEmCwE,CAAmBlH,MAEvC,kBAACmH,EAAD,CAAetF,KAAMA,QAKjC,yBAAK/F,UAAU,sCACX,4BAAQA,UAAU,+BAAlB,sBCzGTsL,MAlBf,WAEE,OACE,yBAAKtL,UAAU,OACb,kBAAC,IAAD,CAAQ2K,KAAK,KACX,kBAACY,EAAD,CAAUZ,KAAK,MACf,kBAACa,EAAD,CAAWb,KAAK,UAChB,kBAACc,EAAD,CAAMd,KAAK,QACT,kBAACF,EAAD,CAAYE,KAAK,KACjB,kBAACD,EAAD,CAAgBC,KAAK,iGAEvB,kBAACe,EAAD,CAAiBf,KAAK,6BACtB,kBAACgB,EAAD,CAAQhB,KAAK,cCXDiB,QACW,cAA7BC,OAAOlJ,SAASmJ,UAEe,UAA7BD,OAAOlJ,SAASmJ,UAEhBD,OAAOlJ,SAASmJ,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/L,MAAK,SAAAgM,GACJA,EAAaC,gBAEd9L,OAAM,SAAA+L,GACLhL,QAAQgL,MAAMA,EAAMpL,c","file":"static/js/main.c2295994.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\n\nexport default () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n  const register = (event) => {\n    event.preventDefault();\n    const newUser = { firstName, lastName, email, password, confirmPassword };\n    axios.post(\"http://localhost:8000/api/register\", newUser, {withCredentials: true})\n        .then((res) => {\n            setFirstName(\"\");\n            setLastName(\"\");\n            setEmail(\"\");\n            setPassword(\"\");\n            setConfirmPassword(\"\");\n\n            navigate('/home')\n        })\n        .catch((err) => {setErrors(err.response.data.errors);}\n        );\n  };\n\n    return(\n        <>\n            {/* main container for form */}\n            <form className=\"col-5 dark-font \" onSubmit={register}>\n                <div className=\"form-row justify-content-around\">\n                    <fieldset className=\"thick-border form-group\">\n                    <legend className=\"w-auto mx-3 px-1\">register</legend>\n                        <div className=\"form-row m-1\">\n                            <div className=\"col-md-6\">\n                                <input\n                                    onChange={(e) => setFirstName(e.target.value)}\n                                    value={firstName}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"first name\"\n                                ></input>\n                                {errors?.firstName && (\n                                    <span className=\"error-message\">{errors.firstName?.properties?.message}</span>\n                                )}\n                            </div>\n                            <div className=\"col-md-6\">\n                                <input\n                                    onChange={(e) => setLastName(e.target.value)}\n                                    value={lastName}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"last name\"\n                                ></input>\n                                {errors?.lastName && (\n                                    <span className=\"error-message\">{errors.lastName?.properties?.message}</span>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"form-row m-2 m-2\">\n                            <input\n                                onChange={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"email\"\n                            ></input>\n                            {errors?.email && (\n                                <span className=\"error-message\">{errors.email?.properties?.message}</span>\n                            )}\n                        </div>\n                        <div className=\"form-row m-1\">\n                            <div className=\"col-md-6\">\n                                <input\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    value={password}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"password\"\n                                ></input>\n                                {errors?.password && (\n                                    <span className=\"error-message\">{errors.password?.properties?.message}</span>\n                                )}\n                            </div>\n                            <div className=\"col-md-6\">\n                                <input\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\n                                    value={confirmPassword}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"confirm password\"\n                                ></input>\n                                {errors?.confirmPassword && (\n                                    <span className=\"error-message\">{errors.confirmPassword?.properties?.message}</span>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"row justify-content-around\">\n                            <button className=\"btn btn-outline-success thick-border dark-font font-weight-bold m-2\">\n                                register\n                            </button>\n                        </div>    \n                    </fieldset> \n                </div>\n            </form>\n        </>\n    );\n}","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const login = (e) => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/api/login\",{ email, password },{withCredentials: true,})\n      .then((res) => {navigate(\"/home\");})\n      .catch((err) => {setErrorMessage(err.response.data.msg);\n      });\n  } \n\n    return(\n        <>\n            {/* main container for form */}\n            <form className=\"col-5 dark-font \" onSubmit={login}>\n                <div className=\"form-row justify-content-around\">\n                    <fieldset className=\"thick-border form-group\">\n                    <legend className=\"w-auto mx-3 px-1\">login</legend>\n                        <div className=\"form-row m-2 m-2\">\n                            <input\n                                onChange={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"email\"\n                            ></input>\n                        </div>\n                        <div className=\"form-row m-2 m-2\">\n                            <input\n                                onChange={(e) => setPassword(e.target.value)}\n                                value={password}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"password\"\n                            ></input>\n                        </div>\n                        <p className=\"error-message\">{errorMessage ? errorMessage : \"\"}</p>\n                        <div className=\"row justify-content-around\">\n                            <button className=\"btn btn-outline-success thick-border dark-font font-weight-bold m-2\">\n                                login\n                            </button>\n                        </div>    \n                    </fieldset> \n                </div>\n            </form>\n        </>\n    );\n}","import React from 'react';\nimport {navigate} from '@reach/router';\nimport axios from 'axios';\n\nimport Register from '../components/Register';\nimport Login from '../components/Login';\n\nexport default () => {\n\n    const guestLogin = (e) => {\n        e.preventDefault();\n        axios\n          .post(\"http://localhost:8000/api/login\",{ email: \"guest@birder.com\", password: \"asdfasdf\" },{withCredentials: true,})\n          .then((res) => {\n            navigate(\"/home\");\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      } \n\n    return(\n        <>\n        <h1 className=\"mt-4\">Welcome to Encounter!</h1>\n        <h3>Just having a look around? </h3>\n        <form onSubmit={guestLogin}>\n            <button className=\"btn btn-outline-success btn-lg mb-4\">continue as a guest</button>\n        </form>\n\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <Register />\n                <Login />\n            </div>\n        </div>\n        </>\n    );\n}","import React from 'react';\nimport axios from 'axios';\nimport {Link, navigate} from '@reach/router';\n\nexport default (props) => {\n    const userName = props.userName;\n\n    const logout = (e) => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/logout', {}, {withCredentials:true})\n            .then(res => {navigate('/')})\n            .catch(err => console.log(err));\n    };\n\n    return(\n        <div className=\"d-flex justify-content-around\">\n            <Link to=\"/home\" className=\"btn btn-outline-primary btn-lg mr-4 my-4\">Home</Link>\n            <h2 className=\"dark-font mr-auto mt-4\"> Hey, {userName}! </h2>\n            <Link to=\"/main\" className=\"btn btn-outline-success btn-lg m-4\">New List</Link>\n            <button onClick={logout} className=\"btn btn-outline-danger btn-lg m-4\">Logout</button>\n        </div>\n    );\n};","import React from 'react';\n\nexport default ({checklist}) => {\n    const formatted_date = checklist.updatedAt.slice(0,10);\n\n    return(\n        <div className=\"card mb-3 mr-3 thick-border col-9 d-inline-flex\" >\n            <div className=\"card-body justify-content-between d-flex\">\n                <a \n                    href={`/checklists/${checklist._id}`}\n                    className=\"h2 py-3 stretched-link d-inline-flex col-5\"\n                >{checklist.title}\n                </a>\n                <div className=\"col-5\">\n                    <p \n                        className=\"font-bold d-inline-flex align-self-center\" \n                        style={{fontSize: 22 + 'px'}}\n                    >location:  {checklist.location}\n                    </p>\n                    <p \n                        className=\"h6 dark-font d-inline-flex align-self-center mr-4\" \n                        style={{fontSize: 14 + 'px'}}\n                    >last updated: {formatted_date}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default () => {\n\n    return(\n        <>\n                <h2>Updating your list of lists...</h2>\n            <div className=\"container\">\n                <iframe \n                    src=\"https://giphy.com/embed/XAWvCOd3oV7q\" \n                    frameBorder=\"0\" \n                    className=\"\" \n                    allowFullScreen\n                    style={{height:400}}\n                >\n                </iframe>\n            </div>\n            <p><a href=\"https://giphy.com/gifs/cheezburger-funny-birds-XAWvCOd3oV7q\">via GIPHY</a></p>\n        </>\n    );\n}","import React from 'react';\n\nexport default () => {\n    return(\n        <>\n            <h4 className=\"helper-msg-color\">You haven't created any checklists yet! <br/>Click on the New List button to get started.</h4>\n            <div className=\"container\">\n                <iframe \n                    src=\"https://giphy.com/embed/X8ynfaP1ZwTvTbxH1b\" \n                    frameBorder=\"0\" \n                    className=\"\" \n                    allowFullScreen\n                    style={{height:400}}\n                >\n                </iframe>\n            </div>\n            <p><a href=\"https://giphy.com/gifs/cbc-schittscreek-schitts-creek-X8ynfaP1ZwTvTbxH1b\">via GIPHY</a></p>\n        </>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport NavBar from '../components/NavBar';\nimport ChecklistLink from '../components/ChecklistLink';\nimport LoadingUpdates from './LoadingUpdates';\nimport NoLists from '../components/NoLists';\n\nexport default () => {\n    var _ = require('agile');\n    const [isLoaded, setIsLoaded] = useState(false);\n    // GET LOGGED IN USER:\n    const [loggedInUser, setLoggedInUser] = useState({});\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/users/loggedin\", {withCredentials: true})\n            .then(user => {\n                console.log(`logged in user: ${user.data.email}`)\n                setLoggedInUser(user.data);\n            })\n            .catch(err => {console.log(err)}); \n    }, []);\n\n    // GET ALL USER'S CHECKLISTS:\n    const [checklists, setChecklists] = useState([]);\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/users/checklists\", {withCredentials: true})\n            .then(res => {\n                let lists = res.data.checklists;\n                lists = _.orderBy(lists, '-updatedAt');\n                setChecklists(lists);\n                setIsLoaded(true);\n            })\n            .catch(err => {console.log(err)}); \n    }, []);\n\n    const handleDelete = (deleteId) => {\n        setIsLoaded(false);\n        axios.delete(`http://localhost:8000/api/checklists/${deleteId}`, {withCredentials: true})\n            .then(res => {\n                console.log(`deleting checklist: ${deleteId}`);\n                const filteredLists = checklists.filter(list => {return list._id != deleteId;});\n                setChecklists(filteredLists);\n                setIsLoaded(true);\n            })\n            .catch(err => console.log(err));\n    };\n\n    return(\n        <div className=\"container\">\n            <NavBar userName={loggedInUser.firstName}/>\n\n            {!isLoaded && <LoadingUpdates />}\n            {(isLoaded && checklists.length > 0) ? \n            <div>\n                <h2 className=\"text-left dark-font\">Here's all your saved checklists:</h2>\n                <h6 className=\"helper-msg-color text-left ml-1\">Click on a list to view/update it.</h6>\n            </div> : null}\n            {(isLoaded && checklists.length === 0) ? <NoLists/> : null}\n            {(isLoaded && checklists.length > 0) ? \n            checklists.map((checklist, idx)=> {\n                    return(\n                        <div className=\"d-flex \">\n                            <ChecklistLink checklist={checklist} key={idx}/>\n                                <button \n                                    onClick={e => handleDelete(checklist._id)} \n                                    className=\"text-center btn btn-danger d-inline-flex align-self-center\">\n                                    delete                                \n                                </button>\n                        </div>\n                    )\n                }\n                ) : null}\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport {navigate} from '@reach/router';\n\n\nexport default () => {\n  //to keep track of what is being typed into search form\n  const [searchLocation, setSearchLocation] = useState(\"\");\n  const [searchState, setSearchState] = useState(\"\");\n  const [searchCounty, setSearchCounty] = useState(\"\");\n  const [searchMunicipality, setSearchMunicipality] = useState(\"\");\n  const [searchSeason, setSearchSeason] = useState(\"\");\n  const [searchRadius, setSearchRadius] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // create month array for season\n    let season ='';\n    let currMonth = new Date().getMonth();\n    if(searchSeason === 'thisSeason'){season=[currMonth-1, currMonth, currMonth+1]}\n    if(searchSeason === 'springSeason'){season=[2,3,4]}\n    if(searchSeason === 'summerSeason'){season=[5,6,7]}\n    if(searchSeason === 'fallSeason'){season=[8,9,10]}\n    if(searchSeason === 'winterSeason'){season=[11,0,1]}\n    season = encodeURIComponent(season);\n\n    // create locale string for Geocoder\n    let locale = ``;\n    if (searchLocation.length>0){locale += `${searchLocation}+`};\n    if (searchMunicipality.length>0){locale += `${searchMunicipality}+`};\n    if (searchCounty.length>0){locale += `${searchCounty}+County+`};\n    if (searchState.length>0){locale += `${searchState}`};\n    locale = encodeURIComponent(locale);\n\n    // send locale and season to DisplayResults for API requests\n    navigate(`/main/results/${locale}/${season}`);\n  }\n\n  return (\n    <>\n    {/* main container for form */}\n    <form className=\"container dark-font\" onSubmit={handleSubmit}>\n        {/* top row for location and season columns */}\n        <div className=\"form-row justify-content-around\">\n            {/* left column for location */}\n            <fieldset className=\"thick-border form-group col-md-5\">\n            <legend className=\"w-auto mx-3 px-1\">location</legend>\n                {/* top row for location */}\n                <div className=\"form-row m-2 m-2\">\n                    <input\n                        onChange={(e) => setSearchLocation(e.target.value)}\n                        value={searchLocation}\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"birding location (park, campus, lake, etc.)\"\n                    ></input>\n                </div>\n                {/* second row for municipality */}\n                <div className=\"form-row m-2\">\n                    <input\n                        onChange={(e) => setSearchMunicipality(e.target.value)}\n                        value={searchMunicipality}\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"municipality\"\n                    ></input>\n                </div>\n                {/* third row for county & state */}\n                <div className=\"form-row m-1\">\n                    <div className=\"col-md-6\">\n                        <input\n                            onChange={(e) => setSearchCounty(e.target.value)}\n                            value={searchCounty}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"county\"\n                        ></input>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <input\n                            onChange={(e) => setSearchState(e.target.value)}\n                            value={searchState}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"state\"\n                        ></input>\n                    </div>\n                </div>\n                {/* bottom row for search radius */}\n                <div className=\"form-row m-2\">\n                    <input\n                        onChange={(e) => setSearchRadius(e.target.value)}\n                        value={searchRadius}\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"search radius (km)\"\n                    ></input>\n                </div>\n            </fieldset> {/* end column for location */}\n            {/* right column for season, stretched to match height of location */}\n            <fieldset className=\"thick-border form-group col-md-5\">\n            <legend className=\"w-auto mx-3 px-1\">season</legend>\n                {/* top row for current season */}\n                <div className=\"form-row justify-content-around\">\n                    <div className=\"p-1 my-2 lt-gray-border\">\n                        <div className=\"form-check text-center\">\n                            <input\n                            onChange={(e) => setSearchSeason(e.target.value)}\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"searchSeason\"\n                            id=\"thisSeason\"\n                            value=\"thisSeason\"\n                            ></input>\n                            <label className=\"form-check-label\" htmlFor=\"thisSeason\">\n                            this season (&#177; 1 month from today)\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                {/* second row for spring/summer */}\n                <div className=\"form-row justify-content-around\">\n                    <div className=\"col-md-4 my-2 lt-gray-border\">\n                        <div className=\"form-check text-center\">\n                            <input\n                            onChange={(e) => setSearchSeason(e.target.value)}\n                            className=\"form-check-input mt-3\"\n                            type=\"radio\"\n                            name=\"searchSeason\"\n                            id=\"springSeason\"\n                            value=\"springSeason\"\n                            ></input>\n                            <label className=\"form-check-label\" htmlFor=\"springSeason\">\n                                spring<br/>(March - May)\n                            </label>\n                        </div>\n                    </div>\n                    <div className=\"col-md-4 my-2 lt-gray-border\">\n                        <div className=\"form-check text-center\">\n                            <input\n                            onChange={(e) => setSearchSeason(e.target.value)}\n                            className=\"form-check-input mt-3\"\n                            type=\"radio\"\n                            name=\"searchSeason\"\n                            id=\"summerSeason\"\n                            value=\"summerSeason\"\n                            ></input>\n                            <label className=\"form-check-label\" htmlFor=\"summerSeason\">\n                                summer<br/>(June - Aug)\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                {/* third row for winter/fall */}\n                <div className=\"form-row justify-content-around\">\n                    <div className=\"col-md-4 my-2 lt-gray-border\">\n                        <div className=\"form-check text-center\">\n                            <input\n                            onChange={(e) => setSearchSeason(e.target.value)}\n                            className=\"form-check-input mt-3\"\n                            type=\"radio\"\n                            name=\"searchSeason\"\n                            id=\"fallSeason\"\n                            value=\"fallSeason\"\n                            ></input>\n                            <label className=\"form-check-label mx-2\" htmlFor=\"fallSeason\">\n                                fall<br/>(Sept - Nov)\n                            </label>\n                        </div>\n                    </div>\n                    <div className=\"col-md-4 my-2 lt-gray-border\">\n                        <div className=\"form-check text-center\">\n                            <input\n                            onChange={(e) => setSearchSeason(e.target.value)}\n                            className=\"form-check-input mt-3\"\n                            type=\"radio\"\n                            name=\"searchSeason\"\n                            id=\"winterSeason\"\n                            value=\"winterSeason\"\n                            ></input>\n                            <label className=\"form-check-label mx-2\" htmlFor=\"winterSeason\">\n                                winter<br/>(Dec - Feb)\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>{/* end column for season */}\n        </div>\n        {/* bottom row for submit button */}\n        <div className=\"row justify-content-around\">\n            {/* submit button, centered */}\n            <button className=\"btn btn-success font-weight-bold m-2\">\n                Build a Checklist\n            </button>\n        </div>    \n    </form>\n    </>\n  );\n};\n","import React from 'react'\n\nexport default ({bird}) => {\n    return(\n        <>\n        <div className=\"card mb-3 mr-3 thick-border\" style={{width: 20 + 'em'}} >\n            <img \n                src={bird.photoUrl} \n                alt={`${bird.commonName}`}\n                className=\"card-img-top rounded-corners align-self-center mt-2\"\n                style={{width: 80 + 'px'}}\n                >\n            </img>\n            <div className=\"card-body text-center\">\n                <a \n                    href={`${bird.wikipediaUrl}`}\n                    target=\"_blank\"\n                    className=\"h5 py-3\"\n                >{bird.commonName}\n                </a>\n                <p className=\"font-italic\">{bird.latinName}</p>\n                <a href={`${bird.iNatOccUrl}`} target=\"_blank\"><span className=\"h6 dark-font\" style={{fontSize: 14 + 'px'}}>last seen here on: </span>{bird.observedOn}</a>\n            </div>\n        </div>\n        </>\n    );\n}","import React from 'react';\n\nexport default () => {\n\n    return(\n        <>\n                <h2>Rustling up some birds...</h2>\n            <div className=\"container\">\n                <iframe \n                    src=\"https://giphy.com/embed/gSRkSblDEjUuk\" \n                    frameBorder=\"0\" \n                    className=\"\" \n                    allowFullScreen\n                    style={{height:400}}\n                >\n                </iframe>\n            </div>\n            <p><a href=\"https://giphy.com/gifs/cheezburger-bird-popcorn-funny-gSRkSblDEjUuk\">via GIPHY</a></p>\n        </>\n    );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport SearchBird from './SearchBird';\nimport { navigate } from '@reach/router';\nimport BirdBinoculars from '../views/BirdBinoculars';\n\n\nexport default (props) => {\n    const [isLoaded, setIsLoaded] = useState(false);\n    // to use orderBy in filterBirds():\n    var _ = require('agile');\n\n    const [loggedInUser, setLoggedInUser] = useState({});\n    \n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/users/loggedin\", {withCredentials: true})\n            .then(user => {\n                console.log(`logged in user: ${user.data.email}`)\n                setLoggedInUser(user.data);\n            })\n            .catch(err => {console.log(err)}); \n    }, [])\n\n    // create variables for props passed down through Router \n    const locality = props.locale;\n    const season = decodeURIComponent(props.season);\n    let localeString = decodeURIComponent(locality).replace(\"+\", \", \");\n\n    // create state for results of API calls:\n    const [birdList, setBirdList] = useState([]);\n    const [geocodeError, setGeocodeError] = useState('');\n    const [birdListError, setBirdListError] = useState('');\n    // create state for other checklist inputs:\n    const [title, setTitle] = useState(\"\");\n    const [location, setLocation] = useState(localeString);\n    const [notes, setNotes] = useState(\"\");\n\n    // filter results for unique taxa, then order by common name\n    const filterBirds = (birds) => {\n        console.log(`starting to filter...`);\n        let fullList = [...birds];\n        let filteredList = [];\n        let uniqueBirds = [];\n        fullList.forEach(b => {\n            if (!uniqueBirds.includes(b.taxon.preferred_common_name)){                \n                filteredList.push({\n                    photoUrl: b.taxon.default_photo.square_url,\n                    commonName: b.taxon.preferred_common_name,\n                    latinName: b.taxon.name,\n                    wikipediaUrl: b.taxon.wikipedia_url,\n                    iNatOccUrl: b.uri,\n                    observedOn: b.observed_on,\n                    hasBeenSeen: false,\n                    notes: \"\",\n                    shouldSave: true\n                });\n                uniqueBirds.push(b.taxon.preferred_common_name);\n            }\n        });\n        let orderedList = _.orderBy(filteredList, 'commonName');\n        return orderedList;\n    }\n    \n    // make calls to Geocoder then iNaturalist\n    useEffect(()=>{\n        axios.get(`https://maps.googleapis.com/maps/api/geocode/json`, {\n            params: {\n                address: locality,\n                key: process.env.REACT_APP_GEOCODER_KEY\n            }\n        })\n            .then(res=>{\n                // use response to build request to iNaturalist:\n                let currDate = new Date();\n                axios.get(`https://api.inaturalist.org/v1/observations`, {\n                    params: {\n                        per_page: 200,\n                        iconic_taxa: `Aves`,\n                        order: `desc`,\n                        order_by: `observed_on`,\n                        quality_grade: `research`,\n                        geoprivacy: `open`,\n                        month: `${season}`,\n                        // d1 = must be observed on or after this date\n                        d1: `${currDate.getFullYear()-50}-${currDate.getMonth()+1}-${currDate.getDate()}`,\n                        // d2 = must be observed on or before this date\n                        d2: `${currDate.getFullYear()}-${currDate.getMonth()+1}-${currDate.getDate()}`,\n                        // using geocoder response to fill lat & long\n                        lat: `${res.data.results[0].geometry.location.lat}`,\n                        lng: `${res.data.results[0].geometry.location.lng}`\n                    }\n                })\n                    .then(r=>{\n                        let birds = filterBirds(r.data.results); \n                        setBirdList(birds);\n                        setIsLoaded(true);\n                    })\n                    .catch(err => setBirdListError(`An error occurred while trying to build your checklist. Please try again.`))\n            })\n            .catch(err=>setGeocodeError(`Something's wrong with the location you're using. Try broadening your search.`))\n    },[]);\n\n    // toggle bird.shouldSave\n    const keepBirdHandler = (idx) => {\n        birdList[idx].shouldSave = !birdList[idx].shouldSave;\n        setBirdList([...birdList]);\n    }\n\n    //build post request to save checklist to user's account\n    const saveChecklistHandler = (e) => {\n        e.preventDefault();\n        //filter through birdList, keep only birds with shouldSave == true, don't save that attribute\n        let birdsToSave = [...birdList];\n        birdsToSave = birdsToSave.filter(b => b.shouldSave ===true);\n        birdsToSave = birdsToSave.map( b => {\n            let bird = {\n                commonName: b.commonName,\n                hasBeenSeen: b.hasBeenSeen,\n                iNatOccUrl: b.iNatOccUrl,\n                latinName: b.latinName,\n                notes: b.notes,\n                observedOn: \"\",\n                photoUrl: b.photoUrl,\n                wikipediaUrl: b.wikipediaUrl\n            };\n            return bird;\n        });\n        \n        //create checklist object && send to db, then update user's .checklists \n        let newChecklist = {\n            birds: birdsToSave, \n            creator: loggedInUser._id, \n            location: location, \n            notes: notes, \n            title: title.length > 0 ? title : \"[No Title]\"};\n        axios.post(\"http://localhost:8000/api/checklists/new\", newChecklist, {withCredentials: true})\n            .then( res => {\n                const listId = res.data.newList._id;\n                const editedUser = {checklists: loggedInUser.checklists.concat(listId)};\n                // console.log(`res from /api/checklists/new ${res.data.newList._id}`);\n                axios.put(\"http://localhost:8000/api/users/edit\", editedUser, {withCredentials: true})\n                    .then(res => {\n                        res.json({msg: `checklist._id successfully added to user's acct!`});\n                    })\n                    .catch(err => console.log(`error adding checklist to user's acct: ${err}`));\n                return listId;\n            })\n            .then(newListId => {\n                navigate(`/checklists/${newListId}`);})\n            .catch(err => console.log(`error with making new checklist: ${err}`))\n    }\n\n    // display filtered list of results as a form to create new checklist\n    return(\n        <div>\n            {geocodeError.length>0 && <p className=\"error-message\">{geocodeError}</p>}\n            {birdListError.length>0 && <p className=\"error-message\">{birdListError}</p>}\n            {!isLoaded && <BirdBinoculars/>}\n            <hr className=\"thick-border\"/>\n            {isLoaded && \n            <form onSubmit={saveChecklistHandler}>\n                <div className=\"d-flex justify-content-between\">\n                    <h2 className=\"ml-2 dark-font\">Here's what we found:</h2>\n                    <button className=\"btn btn-primary btn-lg mr-4\">Save Checklist</button>\n                </div>\n                <h6 className=\"helper-msg-color text-left ml-2\">To save this list, decide which birds to keep (&#x2611;) or not (&#x2610;), add a title if you want, then hit the save button.</h6>\n                <br></br>\n                <div className=\"form-row m-2\">\n                    <div className=\"form-row col-6\">\n                        <label className=\"text-left\">Title:</label>\n                        <input\n                            name=\"title\"\n                            onChange={(e) => setTitle(e.target.value)}\n                            value={title}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Do you want to name this list?\"\n                        ></input>\n                    </div>\n                    <div className=\"form-row ml-2 col-6\">\n                        <label>Location:</label>\n                        <input\n                            name=\"location\"\n                            onChange={(e) => setLocation(e.target.value)}\n                            value={location}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Do you want to specify a location?\"\n                        ></input>\n                    </div>\n                </div>\n                { birdList.map((bird, idx)=> {\n                    return(\n                        // <label className=\"hidden-checkbox\" >\n                        <label  >\n                            <input \n                                type=\"checkbox\" \n                                value={bird} \n                                key={idx} \n                                checked={bird.shouldSave}\n                                onChange={() => keepBirdHandler(idx)}\n                            />\n                            <SearchBird bird={bird} />\n                        </label>\n                    )\n                }\n                )}\n                <div className=\"d-flex justify-content-center mb-4\">\n                    <button className=\"btn btn-primary btn-lg mr-4\">Save Checklist</button>\n                </div>\n            </form>}\n        </div>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport {Router} from '@reach/router';\nimport axios from 'axios';\n\nimport NavBar from '../components/NavBar';\nimport SearchForm from '../components/SearchForm';\nimport DisplayResults from '../components/DisplayResults';\n\nexport default () => {\n    // GET LOGGED IN USER:\n    const [loggedInUser, setLoggedInUser] = useState({});\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/users/loggedin\", {withCredentials: true})\n            .then(user => {\n                console.log(`logged in user: ${user.data.email}`)\n                setLoggedInUser(user.data);\n            })\n            .catch(err => {console.log(err)}); \n    }, []);\n\n    return(\n        <div className=\"container\">\n            <NavBar userName={loggedInUser.firstName}/>\n            <h6 className=\"helper-msg-color text-left ml-4\">To create a new list, just fill out the form and click the button!</h6>\n            <SearchForm />\n\n            <Router >\n                <DisplayResults path=\"results/:locale/:season\"/>\n            </Router>\n        </div>\n    );\n}","import React from 'react';\nimport {Link} from '@reach/router';\n\nexport default () => {\n\n    return(\n        <div className=\"container my-5\">\n            <h1 className=\"my-4\">You have successfully logged out!</h1>\n            <Link to=\"/\" className=\"btn btn-outline-success btn-lg mb-4\">Login / Register</Link>\n        </div>\n    );\n}","import React from 'react'\n\nexport default ({bird}) => {\n    return(\n        <>\n        <div className=\"card mb-3 mr-3 thick-border\" style={{width: 20 + 'em'}} >\n            <img \n                src={bird.photoUrl} \n                alt={`${bird.commonName}`}\n                className=\"card-img-top rounded-corners align-self-center mt-2\"\n                style={{width: 80 + 'px'}}\n                >\n            </img>\n            <div className=\"card-body text-center\">\n                <a \n                    href={`${bird.wikipediaUrl}`}\n                    target=\"_blank\"\n                    className=\"h5 py-3\"\n                >{bird.commonName}\n                </a>\n                <p className=\"font-italic\">{bird.latinName}</p>\n                <p className=\"h6 dark-font\" style={{fontSize: 14 + 'px'}}>spotted on: {bird.observedOn}</p>\n            </div>\n        </div>\n        </>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport {navigate} from '@reach/router';\nimport axios from 'axios';\n\nimport NavBar from '../components/NavBar';\nimport ChecklistBird from '../components/ChecklistBird';\nimport BirdBinoculars from './BirdBinoculars';\n\n\nexport default ({checklistId}) => {\n    var _ = require('agile');\n    const [isLoaded, setIsLoaded] = useState(false);\n    // GET LOGGED IN USER:\n    const [loggedInUser, setLoggedInUser] = useState({});\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/users/loggedin\", {withCredentials: true})\n            .then(user => {\n                console.log(`logged in user: ${user.data.email}`)\n                setLoggedInUser(user.data);\n            })\n            .catch(err => {console.log(err)}); \n    }, []);\n    // GET CHECKLIST\n    const [lastUpdated, setLastUpdated] = useState();\n    const [title, setTitle] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [notes, setNotes] = useState(\"\");\n    const [birds, setBirds] = useState([]);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/checklists/${checklistId}`, {withCredentials: true})\n            .then(res => {\n                setLastUpdated(res.data.updatedAt.slice(0,10));\n                setTitle(res.data.title);\n                setLocation(res.data.location);\n                setNotes(res.data.notes);\n                setBirds(_.orderBy(res.data.birds, ['hasBeenSeen', 'commonName']));\n                setIsLoaded(true);\n            })\n            .catch(err => console.log(err));\n    },[]);\n\n    const saveEditsHandler = (e) => {\n        e.preventDefault();\n        const editedChecklist = {title, location, notes, birds};\n        axios.put(`http://localhost:8000/api/checklists/${checklistId}`, editedChecklist, {withCredentials: true})\n             .then(res => res.json({msg:`successfully updated checklist!`}))\n             .catch(err => console.log(err));\n        navigate('/home')\n    };\n\n    const hasBeenSeenHandler = (idx) => {\n        console.log(`hasBeenSeenHandler triggered...`);\n        let birdList = [...birds];\n        birdList[idx].hasBeenSeen = !birdList[idx].hasBeenSeen;\n        if (birdList[idx].hasBeenSeen) {\n            let currDate = new Date();\n            let formattedDate = `${currDate.getFullYear()}-${currDate.getMonth()+1}-${currDate.getDate()}`;\n            birdList[idx].observedOn = formattedDate;\n        } \n        else {birdList[idx].observedOn = ''};\n        birdList = _.orderBy(birdList, ['hasBeenSeen', 'commonName']);\n        setBirds(birdList);\n    };\n\n    return(\n        <div className=\"container\">\n            <NavBar userName={loggedInUser.firstName}/>\n            {!isLoaded && <BirdBinoculars />}\n            <div>\n                {isLoaded && \n                <>\n                <h1 className=\"dark-font text-left\">{title}</h1>\n                <h4 className=\"dark-font text-left\">Last updated: <span className=\"dark-font h2\">{lastUpdated}</span></h4>\n                <h6 className=\"helper-msg-color text-left\">Check off the birds as you spot them. Make any other changes you'd like and click save when you're ready!</h6>\n                <form onSubmit={saveEditsHandler}>\n                    <br></br>\n                    <div className=\"form-row m-2\">\n                        <div className=\"col-8\"></div>\n                        <div className=\"form-row col-6\">\n                            <label className=\"h4 dark-font\">Title:</label>\n                            <input\n                                name=\"title\"\n                                onChange={(e) => setTitle(e.target.value)}\n                                value={title}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder={title}\n                            ></input>\n                        </div>\n                        <div className=\"form-row ml-2 col-6\">\n                            <label className=\"h4 dark-font\">Location:</label>\n                            <input\n                                name=\"location\"\n                                onChange={(e) => setLocation(e.target.value)}\n                                value={location}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder={location}\n                            ></input>\n                        </div>\n                    </div>\n                    <div className=\"form-row m-2\">\n                        <label className=\"h4 dark-font\">Notes:</label>\n                        <textarea\n                            name=\"notes\"\n                            onChange={(e) => setNotes(e.target.value)}\n                            value={notes}\n                            type=\"text-area\"\n                            className=\"form-control\"\n                            placeholder={notes}\n                            rows={5}\n                        ></textarea>\n                    </div>\n                    <div className=\"d-flex justify-content-end\">\n                        <button className=\"btn btn-primary mb-4 mr-2 btn-lg\">Save Changes</button>\n                    </div>\n                    {birds.map((bird, idx)=> {\n                        return(\n                            // <label className=\"hidden-checkbox\" >\n                            <label  >\n                                <input \n                                    type=\"checkbox\" \n                                    value={bird} \n                                    key={idx} \n                                    checked={bird.hasBeenSeen}\n                                    onChange={() => hasBeenSeenHandler(idx)}\n                                />\n                                <ChecklistBird bird={bird} />\n                            </label>\n                        )\n                    }\n                    )}\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <button className=\"btn btn-primary btn-lg mr-4\">Save Changes</button>\n                    </div>\n                </form>\n                </>}\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {Router} from '@reach/router';\nimport './App.css';\nimport LoginReg from './views/LoginReg';\nimport Dashboard from './views/Dashboard';\nimport Main from './views/Main';\nimport Logout from './views/Logout';\nimport DisplayResults from './components/DisplayResults';\nimport SearchForm from './components/SearchForm';\nimport SingleChecklist from './views/SingleChecklist';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router path=\"/\">\n        <LoginReg path=\"/\"/>\n        <Dashboard path=\"/home\"/>\n        <Main path=\"main\">\n          <SearchForm path=\"\"/>\n          <DisplayResults path=\"/results/:locale/:season/:searchLocation?/:searchMunicipality?/:searchCounty?/:searchState?\"/>\n        </Main>\n        <SingleChecklist path=\"/checklists/:checklistId\"/>\n        <Logout path=\"logout\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}